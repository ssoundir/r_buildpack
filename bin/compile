#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

shopt -s extglob

function error() {
  echo " !     $*" >&2
  exit 1
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function build() {
  echo ----------------------------------------------------------------------
  echo Building $@...
  echo ----------------------------------------------------------------------
  echo
  pushd $1
    ./configure --prefix=$VENDOR_DIR/$2 ${@:3} > /dev/null 2>&1
    echo "configure finished"
    make
    echo "make finished"
    make install > /dev/null 2>&1
    echo "install finished"
    make clean > /dev/null 2>&1
    echo "clean finished"
  popd > /dev/null
  echo
  echo

  # add to libraries and pkg-config
  export LD_LIBRARY_PATH="$VENDOR_DIR/$2/lib:$LD_LIBRARY_PATH"
  export PKG_CONFIG_PATH="$VENDOR_DIR/$2/lib/pkgconfig:$PKG_CONFIG_PATH"

}

# clean up leaking environment
unset GIT_DIR

# parse and derive params
BUILD_DIR=$1
CACHE_DIR="$2/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"

# config
BUILD_PACK_VERSION="20130729"

GCC_VERSION="4.3"
GLIBC_VERSION="2.7"
R_VERSION="3.2.3"

VENDOR_DIR="$BUILD_DIR/vendor"
R_HOME="$VENDOR_DIR/R"
CRAN_MIRROR="http://cran.revolutionanalytics.com"

mkdir -p $CACHE_DIR

# vendor R into the slug
echo "Vendoring R $R_VERSION" | indent

mkdir -p $VENDOR_DIR && mkdir -p /app/vendor
echo "Starting tar xzf of r binary"
echo "Concatenating R binary files..."
cat ${BUILDPACK_DIR}/R-3.2.3-binary/R-3.2.3-binariesa* > ${VENDOR_DIR}/R-3.2.3-binaries-20160310-1505.tar.gz
echo "Untarring R binary files into ${VENDOR_DIR}..."
tar xzf ${VENDOR_DIR}/R-3.2.3-binaries-20160310-1505.tar.gz -C $VENDOR_DIR
echo "Completed tar xzf of r binary in $VENDOR_DIR"
rm ${VENDOR_DIR}/R-3.2.3-binaries-20160310-1505.tar.gz

echo "R unpacked and installed" | indent

export CPATH=/usr/lib/x86_64-linux-gnu:$R_INCLUDE

# copy over environment
mkdir -p $BUILD_DIR/.profile.d
cp "$BUILDPACK_DIR/bin/r_environment.sh" $BUILD_DIR/.profile.d/r_environment.sh

echo "environment copied" | indent

# prevent warnings
mkdir -p /app/vendor/R/lib64/R/doc/html
touch /app/vendor/R/lib64/R/doc/html/R.css

# install dependencies from CRAN
echo "Executing init.r script" | indent

#R --version

# set the CRAN mirror and run the init.r program
#R -s <<RPROG
#  Sys.setenv(BUILD_DIR="$BUILD_DIR")
#  setwd("$BUILD_DIR")
#  r <- getOption("repos");
#  print(r)
#  r["CRAN"] <- "$CRAN_MIRROR";
#  options(repos=r);
#  `cat $BUILD_DIR/init.r`
#RPROG

## need to copy binaries back so that any installed packages are included in the slug
#rm -rf $VENDOR_DIR && mkdir -p $VENDOR_DIR
#ln -s /app/vendor/gcc-$GCC_VERSION $VENDOR_DIR/gcc-$GCC_VERSION
#ln -s /app/vendor/glibc-$GLIBC_VERSION $VENDOR_DIR/glibc-$GLIBC_VERSION
#ln -s /app/vendor/R $VENDOR_DIR/R

# HACK
#cp $VENDOR_DIR/gcc-$GCC_VERSION/lib64/* $VENDOR_DIR/R/lib64/R/lib

# remove unneeded files to make slug smaller
pushd $VENDOR_DIR/gcc-$GCC_VERSION > /dev/null && rm -rf !(lib64) && popd > /dev/null
pushd $VENDOR_DIR/glibc-$GLIBC_VERSION > /dev/null && rm -rf !(string|time) && popd > /dev/null

echo "R $R_VERSION successfully installed" | indent
